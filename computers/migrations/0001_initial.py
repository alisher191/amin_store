# Generated by Django 5.0.2 on 2024-02-20 09:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производители',
            },
        ),
        migrations.CreateModel(
            name='Body',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='bodyImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('form_factor', models.CharField(max_length=255, verbose_name='Форм-фактор')),
                ('standart_size', models.CharField(max_length=255, verbose_name='Типоразмер')),
                ('liquid_cooler_system_poss', models.CharField(choices=[('yes', 'есть'), ('no', 'нет')], max_length=200, verbose_name='Возможность установки жидкостного охлаждения')),
                ('max_heigh_proccessor_cooler', models.CharField(max_length=255, verbose_name='Максимальная высота процессорного кулера')),
                ('max_video_card_length', models.CharField(max_length=255, verbose_name='Максимальная длина видеокарты')),
                ('dimensions', models.CharField(max_length=255, verbose_name='Габариты (ШхВхГ)')),
                ('front_pannel_connectors', models.TextField(verbose_name='Разъемы на лицевой панели')),
                ('remove_air_filter', models.CharField(choices=[('yes', 'есть'), ('no', 'нет')], max_length=255, verbose_name='Съемный воздушный фильтр')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Корпус',
                'verbose_name_plural': 'Корпусы',
            },
        ),
        migrations.CreateModel(
            name='AudioCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='audioCardImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('manufacturer', models.CharField(max_length=255, verbose_name='Производитель')),
                ('placement_type', models.CharField(max_length=255, verbose_name='Тип расположения')),
                ('connection_type', models.CharField(max_length=200, verbose_name='Тип подключения')),
                ('multi_channel_audio', models.CharField(max_length=255, verbose_name='Возможность вывода многоканального звука')),
                ('jack_3_5', models.IntegerField(default=0, verbose_name='Входных разъемов jack 3.5 мм')),
                ('micro_input', models.IntegerField(default=0, verbose_name='Микрофонных входов')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Звуковая карта',
                'verbose_name_plural': 'Звуковые карты',
            },
        ),
        migrations.CreateModel(
            name='Cooler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='coolerImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('radiator_material', models.CharField(max_length=255, verbose_name='Материал радиатора')),
                ('height', models.IntegerField(default=0, verbose_name='Высота кулера')),
                ('heat_pipes', models.IntegerField(default=0, verbose_name='Количество тепловых трубок')),
                ('rotation_speed', models.CharField(max_length=255, verbose_name='Скорость вращения')),
                ('air_flow', models.CharField(max_length=255, verbose_name='Воздушный поток')),
                ('noise_level', models.CharField(max_length=255, verbose_name='Уровень шума')),
                ('type_of_bearing', models.CharField(max_length=255, verbose_name='Тип подшипника')),
                ('backlight', models.CharField(max_length=255, verbose_name='Подсветка')),
                ('work_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='Время безотказной работы')),
                ('weight', models.IntegerField(default=0, verbose_name='Вес')),
                ('water_block_material', models.CharField(blank=True, max_length=255, null=True, verbose_name='Материал водоблока')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Охлаждение',
                'verbose_name_plural': 'Охлаждение',
            },
        ),
        migrations.CreateModel(
            name='Cpu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='cpuImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('l3_cache_volume', models.CharField(max_length=255, verbose_name='Объем кэша L3')),
                ('socket', models.CharField(blank=True, max_length=100, null=True, verbose_name='Сокет')),
                ('cores_quantity', models.IntegerField(blank=True, null=True, verbose_name='Количество ядер')),
                ('processor_frequency', models.CharField(blank=True, max_length=200, null=True, verbose_name='Частота процессора')),
                ('core', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ядро')),
                ('max_frequency_TB', models.CharField(blank=True, max_length=255, null=True, verbose_name='Максимальная частота с Turbo Boost')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Процессор',
                'verbose_name_plural': 'Процессоры',
            },
        ),
        migrations.CreateModel(
            name='DVDDrive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='dvdDriveImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('drive_type', models.CharField(max_length=255, verbose_name='Тип привода')),
                ('connection_interface', models.CharField(max_length=255, verbose_name='Интерфейс подключения')),
                ('max_speed', models.CharField(max_length=255, verbose_name='Макс. скорость интерфейса')),
                ('placement', models.CharField(choices=[('inside', 'Внутренний'), ('outside', 'Внешний')], max_length=255, verbose_name='placement')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'DVD-привод',
                'verbose_name_plural': 'DVD-приводы',
            },
        ),
        migrations.CreateModel(
            name='Hard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='hardDiskImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('hard_type', models.CharField(max_length=255, verbose_name='Тип')),
                ('volume', models.IntegerField(default=0, verbose_name='Объём')),
                ('read_write_speed', models.CharField(max_length=255, verbose_name='Скорость записи/Скорость чтения')),
                ('buffer_volume', models.CharField(max_length=255, verbose_name='Объем буферной памяти')),
                ('connect', models.CharField(max_length=255, verbose_name='Подключение')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Жёсткий диск',
                'verbose_name_plural': 'Жёсткие диски',
            },
        ),
        migrations.CreateModel(
            name='Headset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='ssdImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('manufacturer', models.CharField(max_length=255, verbose_name='Производитель')),
                ('headset_type', models.CharField(max_length=255, verbose_name='Тип')),
                ('headphone_design', models.CharField(max_length=255, verbose_name='Конструкция наушников')),
                ('connection_type', models.CharField(max_length=255, verbose_name='Тип подключения')),
                ('acoustic_design', models.CharField(max_length=255, verbose_name='Тип акустического оформления')),
                ('mounting_type', models.CharField(max_length=255, verbose_name='Тип крепления')),
                ('cable_connection', models.CharField(max_length=255, verbose_name='Подключение кабеля')),
                ('connector_interface', models.CharField(max_length=255, verbose_name='Интерфейс/разъём подключения')),
                ('volume_control', models.CharField(choices=[('yes', 'да'), ('no', 'нет')], max_length=255, verbose_name='Регулятор громкости')),
                ('folding_design', models.CharField(choices=[('yes', 'да'), ('no', 'нет')], max_length=255, verbose_name='Складная конструкция')),
                ('color', models.CharField(max_length=255, verbose_name='Цвет')),
                ('weight', models.CharField(max_length=255, verbose_name='Вес')),
                ('guarantee', models.CharField(max_length=255, verbose_name='Гарантия')),
                ('battery_life', models.CharField(max_length=255, verbose_name='Продолжительность работы от аккумуляторов')),
                ('battery_of_battery', models.CharField(max_length=255, verbose_name='Тип элементов питания')),
                ('wireless_connection', models.CharField(max_length=255, verbose_name='Тип беспроводной связи')),
                ('range_of_action', models.CharField(max_length=255, verbose_name='Радиус действия')),
                ('bluetooth_version', models.CharField(max_length=255, verbose_name='Версия Bluetooth')),
                ('case_included', models.CharField(choices=[('yes', 'да'), ('no', 'нет')], max_length=255, verbose_name='Чехол/футляр в комплекте')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Гарнитура',
                'verbose_name_plural': 'Гарнитуры',
            },
        ),
        migrations.CreateModel(
            name='Keyboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='ssdImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('equipment', models.CharField(max_length=255, verbose_name='Комплектация')),
                ('appointment', models.CharField(max_length=255, verbose_name='Назначение')),
                ('connection_interface', models.CharField(max_length=255, verbose_name='Интерфейс подключения')),
                ('keyboard_type', models.CharField(max_length=255, verbose_name='Тип')),
                ('digital_block', models.CharField(choices=[('yes', 'есть'), ('no', 'нет')], max_length=255, verbose_name='Цифровой блок')),
                ('key_illumination', models.CharField(choices=[('yes', 'есть'), ('no', 'нет')], max_length=255, verbose_name='Подсветка клавиш')),
                ('keys', models.IntegerField(default=0, verbose_name='Количество клавиш')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Клавиатура',
                'verbose_name_plural': 'Клавиатуры',
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='motherboardImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('form_factor', models.CharField(max_length=255, verbose_name='Форм-фактор')),
                ('slots', models.IntegerField(default=0, verbose_name='Количество слотов памяти')),
                ('chipset', models.CharField(max_length=255, verbose_name='Чипсет')),
                ('sound', models.CharField(max_length=255, verbose_name='Звук')),
                ('socket', models.CharField(blank=True, max_length=100, null=True, verbose_name='Сокет')),
                ('expansion_slots', models.TextField(blank=True, null=True, verbose_name='Слоты расширения')),
                ('m_2_slots_type', models.TextField(blank=True, null=True, verbose_name='Тип слотов M.2')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Материнская плата',
                'verbose_name_plural': 'Материнскае платы',
            },
        ),
        migrations.CreateModel(
            name='Mouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='ssdImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('mouse_type', models.CharField(max_length=255, verbose_name='Тип')),
                ('connection_interface', models.CharField(max_length=255, verbose_name='Интерфейс подключения')),
                ('scroll_wheel', models.CharField(choices=[('yes', 'есть'), ('no', 'нет')], max_length=255, verbose_name='Колесо прокрутки')),
                ('keys', models.IntegerField(default=0, verbose_name='Количество клавиш')),
                ('optical_resolution', models.CharField(max_length=255, verbose_name='Разрешение оптического сенсора')),
                ('weight', models.CharField(max_length=255, verbose_name='Вес')),
                ('sensor_resolution', models.CharField(max_length=255, verbose_name='Разрешение сенсора')),
                ('mouse_design', models.CharField(max_length=255, verbose_name='Дизайн мыши')),
                ('manufacturer', models.CharField(max_length=255, verbose_name='Производитель')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Мышь',
                'verbose_name_plural': 'Мыши',
            },
        ),
        migrations.CreateModel(
            name='OSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='ssdImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Операционная система',
                'verbose_name_plural': 'Операционные системы',
            },
        ),
        migrations.CreateModel(
            name='PowerUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='powerUnitImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('power', models.IntegerField(default=0, verbose_name='Мощность')),
                ('standart', models.CharField(max_length=255, verbose_name='Стандарт')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Блок питания',
                'verbose_name_plural': 'Блоки питания',
            },
        ),
        migrations.CreateModel(
            name='Ram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='coolerImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('memory_type', models.CharField(max_length=255, verbose_name='Тип памяти')),
                ('volume', models.CharField(max_length=255, verbose_name='Объем')),
                ('radiator', models.CharField(max_length=255, verbose_name='Радиатор')),
                ('form_factor', models.CharField(max_length=255, verbose_name='Форм-фактор')),
                ('frequency', models.IntegerField(default=0, verbose_name='Тактовая частота')),
                ('bandwith', models.CharField(max_length=255, verbose_name='Пропускная способность')),
                ('voltage', models.CharField(max_length=255, verbose_name='Напряжение питания')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Оперативная память',
                'verbose_name_plural': 'Оперативная память',
            },
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='ssdImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('diagonal', models.CharField(max_length=255, verbose_name='Диагональ')),
                ('screen_resolution', models.CharField(max_length=255, verbose_name='Разрешение')),
                ('brightness', models.CharField(max_length=255, verbose_name='Яркость')),
                ('contrast', models.CharField(max_length=255, verbose_name='Контрастность')),
                ('response_time', models.CharField(max_length=255, verbose_name='Время отклика')),
                ('max_colors', models.CharField(max_length=255, verbose_name='Максимальное количество цветов')),
                ('update_frequency', models.CharField(max_length=255, verbose_name='Частота обновления')),
                ('height_adjustment', models.CharField(choices=[('yes', 'да'), ('no', 'нет')], max_length=255, verbose_name='Регулировка по высоте')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Монитор',
                'verbose_name_plural': 'Мониторы',
            },
        ),
        migrations.CreateModel(
            name='Ssd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='ssdImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('volume', models.IntegerField(default=0, verbose_name='Ëмкость')),
                ('form_factor', models.CharField(max_length=255, verbose_name='Форм-фактор')),
                ('flash_memory_type', models.CharField(max_length=255, verbose_name='Тип флэш-памяти')),
                ('m2_connector', models.CharField(choices=[('yes', 'есть'), ('no', 'нет')], max_length=255, verbose_name='Разъем M.2')),
                ('max_speed', models.CharField(max_length=255, verbose_name='Макс. скорость интерфейса')),
                ('reading', models.CharField(max_length=255, verbose_name='Скорость чтения')),
                ('recording', models.CharField(max_length=255, verbose_name='Скорость записи')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'SSD диск',
                'verbose_name_plural': 'SSD диски',
            },
        ),
        migrations.CreateModel(
            name='VideoCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='videoCardImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('video_memory', models.CharField(blank=True, max_length=255, null=True)),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Видеокарта',
                'verbose_name_plural': 'Видеокарты',
            },
        ),
        migrations.CreateModel(
            name='WiFiAdapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='wifiImages/', verbose_name='Изображение')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('form_factor', models.CharField(max_length=255, verbose_name='Форм-фактор')),
                ('wireless_standart', models.CharField(max_length=255, verbose_name='Стандарт беспроводной связи')),
                ('external_antennas', models.CharField(max_length=200, verbose_name='Количество внешних антенн')),
                ('info_protection', models.CharField(max_length=255, verbose_name='Защита информации')),
                ('max_wireless_speed', models.CharField(max_length=255, verbose_name='Макс. скорость беспроводного соединения')),
                ('category_name', models.CharField(choices=[('video_card', 'Видео-карта'), ('cpu', 'Процессор'), ('cooler', 'Охлаждение'), ('ram', 'Оперативная память'), ('system_board', 'Материнская плата'), ('hhd', 'Жёсткий диск'), ('ssd', 'Диск SSD'), ('optical_drive', 'DVD привод'), ('psu', 'Блок питания'), ('body', 'Корпус'), ('os', 'Система'), ('wifi', 'WI-FI адаптер'), ('audio_card', 'Звуковая карта'), ('mouse', 'Мышь'), ('keyboard', 'Клавиатура'), ('display', 'Монитор'), ('headset', 'Гарнитура')], max_length=200)),
                ('brand_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='computers.brand')),
            ],
            options={
                'verbose_name': 'Wi-Fi адаптер',
                'verbose_name_plural': 'Wi-Fi адаптеры',
            },
        ),
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(choices=[('powerful', 'Мощный компьютер'), ('gaming', 'Игровой компьютер'), ('cheap', 'Недорогой компьютер')], max_length=100, verbose_name='Раздел')),
                ('name', models.CharField(max_length=255, verbose_name='Название компьютера')),
                ('image', models.ImageField(blank=True, null=True, upload_to='computers_picture/', verbose_name='Изображение')),
                ('descripton', models.TextField(verbose_name='Описание компьютера')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('audio_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='audio_card', to='computers.audiocard', verbose_name='Звуковая карта')),
                ('body', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='body', to='computers.body', verbose_name='Корпус')),
                ('cooler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cooler', to='computers.cooler', verbose_name='Охлаждение')),
                ('cpu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cpu', to='computers.cpu', verbose_name='Процессор')),
                ('optical_drive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='optical_drive', to='computers.dvddrive', verbose_name='Оптический привод')),
                ('hhd', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='hhd', to='computers.hard', verbose_name='Жёсткий диск')),
                ('system_board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='system_board', to='computers.motherboard', verbose_name='Материнская плата')),
                ('os', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='os', to='computers.osystem', verbose_name='Операционная система')),
                ('psu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='psu', to='computers.powerunit', verbose_name='Блок питания')),
                ('ram', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ram', to='computers.ram', verbose_name='Оперативная память')),
                ('ssd_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ssd_1', to='computers.ssd', verbose_name='Диск SSD 1')),
                ('ssd_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ssd_2', to='computers.ssd', verbose_name='Диск SSD 2')),
                ('video_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='video_card', to='computers.videocard', verbose_name='Видео-карта')),
                ('wifi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wifi', to='computers.wifiadapter', verbose_name='Wi-Fi Адаптер')),
            ],
            options={
                'verbose_name': 'Компьютер',
                'verbose_name_plural': 'Компьютеры',
            },
        ),
    ]
